worker_processes auto;

events {
  worker_connections 8196; 
}

http {
  log_format upstream '$remote_addr - [$time_local] - "$request" '
                      '$status $body_bytes_sent $upstream_addr '
                      '$proxy_host $http_user_agent';

  upstream one_dot_one {
    server 1.1.1.1:443;
    server 127.0.0.1:443 max_fails=1 fail_timeout=60s;
  }
  # ðŸ‘†Active health check requires NGINX Plus
  # We can fudge the Rust HttpHealthCheck with:
  #   max_fails=1 fail_timeout=1s

  upstream one_dot_two {
    server 1.0.0.1:443;
    server 127.0.0.1:443 max_fails=1 fail_timeout=60s;
  }
    
  server {
    server_name _;
    listen 8002;

    access_log /var/log/nginx/access.log upstream;

    location / {
      set $dest 'one_dot_one';

      if ($http_x_upstream_b) {
        set $dest 'one_dot_two';
      } 
      # alternatively using `map`, needs to be at http root.
      # map $http_x_upstream_b $dest {
      #   default "one_dot_one";
      #   *       "one_dot_two";
      # }

      proxy_set_header Host "one.one.one.one";
      proxy_pass https://$dest;
      # If you have NGINX Plus:
      # health_check;
    }
  }
}
